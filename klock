#!/bin/bash
# Calculates Erisian Time / Swatch .beats
# 2021-08-24

[ $(uname) = 'Darwin' ] && [ ! $(which gdate) ] && echo "$(basename $0): 'coreutils' is required." && exit 1

GITREP=$HOME/src/klock
MTZ=EST

KLOCK=true
BEAT=

EPACTS=(0 29 10 21 2 13 24 5 16 27 8 19 30 11 22 3 14 25 6 17)
DOMINI=(G A B C D E F)
PHASES=("New Moon" "First Quarter" "Full Moon" "Last Quarter")

MONTHS=(- Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)
MONTHL=(- January February March April May June July August September October November December)
DOWS=(Sun Mon Tue Wed Thu Fri Sat)
DOWL=(Sunday Monday Tuesday Wednesday Thursday Friday Saturday)

setdate() { # usage: setdate [yesterday|today|tomorrow]
	year=$(date -d "$1 00:18" +%Y)
	month=$(date -d "$1 00:18" +%0m)
	day=$(date -d "$1 00:18" +%0d)
}
ordinal() {
	local ord
	case "$1" in
		1)	ord="st";;
		2)	ord="nd";;	
		3)	ord="rd";;
		21)	ord="st";;
		22)	ord="nd";;
		23)	ord="rd";;
		31)	ord="st";;
		*)	ord="th";;
	esac; echo $ord
}
is_leap_year() { ## USAGE: is_leap_year [year]
	case ${1:-$(date +%Y)} in
		*0[48] | *[2468][048] | *[13579][26] | *[02468][048]00 | *[13579][26]00 ) _LY=1;;
		*) unset _LY;;
	esac
}
NWR() { # Not within range
	echo "$(basename $0): Y-M-D not within range."
	exit 1
}

setdate today # set today's date

while getopts ":ekby:m:d:t:lvDU?" OPTION
do
	case $OPTION in
		e)	[ $DDATE ]		&& unset DDATE		|| DDATE=true;;				# Erisian date

		k)	[ $KLOCK ]		&& unset KLOCK		|| KLOCK=true;;				# Erisian klock
		b)	[ $BEAT ]		&& unset BEAT		|| BEAT=true;;				# Swatch .beat

		y)	year=$OPTARG;;													# set year
		m)	month=$OPTARG;;													# set month
		d)	day=$OPTARG														# set day
			[ "$(egrep [[:alpha:][:blank:]-] <<< $day)" ] && setdate "$day";;
		t)	ltime=$OPTARG;;													# set local time

		l)	[ $LIST  ]		&& unset LIST		|| LIST=true;;				# List ETVs
 		v)	[ $VERBOSE ]	&& unset VERBOSE	|| VERBOSE=true;;			# verbose

		D)	while IFS= read -r line; do										# check dependencies
				[ $(which $line) ] || echo "Install '$line'"
			done < <(grep "DEP" $0 | sed -e "/grep DEP/d;s/^.*DEP[: ]*//")
			exit;;
		U)	cp -uv $HOME/bin/$(basename $0) $GITREP/						#- update git repository
			cp -uv $HOME/share/man/man1/$(basename $0).1 $GITREP/
			cp -uv $HOME/bin/getusage $GITREP/
			exit;;
		*)	[ $(which getusage) ] && getusage $0;exit;;
	esac
done

# Initialize
is_leap_year $year
[ $year -le 0 ] && NWR
[ $month -lt 1 -o $month -gt 12 ] && NWR
[ $day -lt 1 -o $day -gt 31 ] && NWR
[ $day -gt 30 ] && [ $month -eq 9 -o $month -eq 4 -o $month -eq 6 -o $month -eq 11 ] && NWR
[   $_LY ] && [ $month -eq 2 -a $day -gt 29 ] && NWR
[ ! $_LY ] && [ $month -eq 2 -a $day -gt 28 ] && NWR

month=$(printf "%02d" $((10#$month)))
day=$(printf "%02d" $((10#$day)))
ymd="$year-$month-$day"
hms=$(date +%T)
tz=$( date -d "$ymd 00:18" +%Z)

[ $ltime ] && hms=$(date -d "$ltime" +%T)

[ "$tz" != "LMT" ] && utc=$(date -ud "$ymd $hms $tz" "+%F %T") ||
					  utc=$(date -ud "$ymd $hms $MTZ" "+%F %T")

# Set Discordian date; DEP ddate
if [ $(which ddate) ]; then
	discord=$(ddate +'%{%e %B%} %Y' $day $month $year | sed 's/The //')
else unset DDATE; fi

# Swatch .beat
# One '.beat' is equivalent to 1 decimal minute (French Decimal Time)
# Meridian set to Biel Mean Time (equiv. to CET with no daylight savings)
swatchH=$(date -ud"+1 hour" +%H)
swatchM=$(date +%M)
swatchS=$(date +%S)

swatch=$(echo "($swatchS + ($swatchM * 60) + ($swatchH * 3600) ) / 86.4" |bc)

# main()
[ $DDATE ] && printf "%s YOLD %d " "${discord::${#discord}-5}" ${discord:(-4)}

# Klock
displaytime() {
	if [ $KLOCK ]; then
		printf "%s:%d" "$1" $2 
		[ $VERBOSE ] && printf " %s %s" $3 $(date -d "$3 UTC" +"%H:%M %Z")
		printf "\n"; fi
}

# list
if [ $LIST ]; then
	VERBOSE=true
	echo "THUD  05:23"
	for i in {0..264}; do
		(( j=$i+1 ))
		(( elapsed=115+($i*5) ))

		dtime=$(date -d "05:23 $elapsed minutes" +%H:%M)
		displaytime "$(printf "%3d" $j)" 0 $dtime
		for k in {1..4}; do
			dmin=$(date -d "$dtime $k minutes" +%H:%M)
			displaytime "$(printf "%3d" $j)" $k $dmin
		done; done; exit
fi

dpre=$(date -d "$ymd 00:00:00" +%s)
dsrt=$(date -d "$ymd 05:23:00 UTC" +%s)
dreg=$(date -d "$ymd 07:18:00 UTC" +%s)
dend=$(date -d "$ymd ${hms:0:2}:${hms:3:2}:00" +%s)
dmid=$(date -d "$ymd 23:59:00" +%s)
dmax=$(date -d "$ymd 1 day 05:23 UTC" +%s)

diffend=$(( ($dend-$dsrt)/60 ))
diffmid=$(( ($dmid-$dsrt)/60 ))
diffmax=$(( ($dmax-$dsrt)/60 ))

if [ $VERBOSE ]; then
	printf "pre-THUD %s %s\n" $dpre  "$(date -d@$dpre)"
	printf "THUD     %s %s\n" $dsrt  "$(date -d@$dsrt)"
	printf "1:0      %s %s\n" $dreg  "$(date -d@$dreg)"
	printf "Target   %s %s\n" $dend  "$(date -d@$dend)"
	printf "Midnight %s %s\n" $dmax  "$(date -d@$dmid)"
	printf "Max      %s %s\n" $dmax  "$(date -d@$dmax)"

	printf "Diff to target:   $diffend\n"
	printf "Diff to midnight: $diffmid\n"
fi

if [ $diffend -lt 115 ] && [ $diffend -ge 0 ]; then printf "THUD\n"
elif [ $diffend -lt 0 ]; then
	(( diffend=diffend*-1 ))
	(( dhrs=265-($diffend/5) ))

	# All's quiet during the pre-THUD
	#(( dbot=$dhrs-($diffmid/5) ))
	#echo $(($dhrs)):$(($diffend-$dbot))
else
	(( dhrs=($diffend-115)/5 ))
	(( dbot=($dhrs*5)+115 ))
	displaytime $(( $dhrs+1)) $(( $diffend-$dbot )) $(date -d "05:23 $diffend minutes" +%H:%M)
fi

[ $DDATE ] && [ ! $KLOCK ] && printf "\n"
[ $BEAT ]  && printf "@$swatch\n"

exit 0
